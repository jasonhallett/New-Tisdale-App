async function fetchSupervisors(){const r=await fetch('/api/supervisors');const d=await r.json();renderGrid(d);}function renderGrid(d){const t=document.querySelector('#grid tbody');t.innerHTML='';for(const r of d){const e=document.createElement('tr');e.dataset.id=r.id;e.innerHTML=`<td contenteditable="false">${r.first_name}</td><td contenteditable="false">${r.last_name}</td><td><button class="btn-small editBtn">Edit</button></td>`;t.appendChild(e);}}document.getElementById('addBtn').addEventListener('click',()=>{const t=document.querySelector('#grid tbody');const r=document.createElement('tr');r.innerHTML=`<td contenteditable="true"></td><td contenteditable="true"></td><td><button class="btn-small saveBtn">Save</button></td>`;t.appendChild(r);});document.querySelector('#grid').addEventListener('click',async e=>{const b=e.target.closest('button');if(!b)return;const r=b.closest('tr');const id=r.dataset.id;if(b.classList.contains('editBtn')){r.querySelectorAll('td[contenteditable]').forEach(td=>td.setAttribute('contenteditable','true'));b.textContent='Save';b.classList.replace('editBtn','saveEditBtn');}else if(b.classList.contains('saveEditBtn')){const f=r.children[0].textContent.trim();const l=r.children[1].textContent.trim();await fetch('/api/supervisors',{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({id,first_name:f,last_name:l})});fetchSupervisors();}else if(b.classList.contains('saveBtn')){const f=r.children[0].textContent.trim();const l=r.children[1].textContent.trim();await fetch('/api/supervisors',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({first_name:f,last_name:l})});fetchSupervisors();}});document.addEventListener('DOMContentLoaded',fetchSupervisors);